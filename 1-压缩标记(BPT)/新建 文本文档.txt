   - 3D建模的基石，广泛应用于游戏、影视、仿真等领域。  
   - 人工设计高拓扑质量网格成本高、耗时长。  

2. **现有方法的局限性**  
   - 传统方法（如MeshGPT、PolyGen）序列长，无法处理高面数网格。  
   - 训练数据多为低面数（<4k），缺乏细节表达能力。  

3. **研究目标**  
   - 提出BPT，显著压缩序列长度，支持高面数网格训练与生成。  

---

### **方法：Blocked and Patchified Tokenization (BPT)**  
1. **分块索引（Block-wise Indexing）**  
   - **步骤**:  
     - 将3D坐标空间分块（Block）并分配索引。  
     - 同一块内的顶点共享块索引，仅记录块内偏移量（Offset）。  
   - **优势**: 减少词汇量，压缩序列长度约50%。  

2. **面片聚合（Patchified Aggregation）**  
   - **步骤**:  
     - 以顶点为中心聚合相邻面片，减少顶点重复。  
     - 使用双块索引区分中心顶点与普通顶点。  
   - **优势**: 进一步压缩序列长度50%，增强空间局部性。  

3. **BPT核心特点**  
   - **压缩率**: 相比现有方法（如MeshGPT），序列长度减少75%（从1.0降至0.26）。  
   - **效率**: 训练和推理效率提升，支持长序列生成。  

**图示**:  
- 分块索引示意图（坐标分块与索引转换）。  
- 面片聚合流程图（中心顶点选择与面片构建）。  

---

### **实验与结果**  
1. **数据集与训练**  
   - 数据来源: ShapeNetV2、Objaverse、内部数据等（共180万网格）。  
   - 两阶段训练: 大规模数据预训练 + 高质量数据微调。  

2. **定量结果**  
   - **压缩率对比**: BPT（0.26）优于MeshGPT（0.67）、MeshAnythingv2（0.46）。  
   - **生成质量**:  
     - Hausdorff距离（Ours: 0.166 vs. MeshAnythingv2: 0.265）。  
     - Chamfer距离（Ours: 0.094 vs. MeshAnythingv2: 0.114）。  

3. **定性结果**  
   - **点云条件生成**: 恢复密集点云细节，拓扑更完整。  
   - **图像条件生成**: 生成结果与输入图像一致，细节更丰富。  

**图示**:  
- 生成网格对比图（低面数 vs. 高面数）。  
- 图像到网格生成效果对比（与Edgerunner对比）。  

---

### **消融实验**  
1. **分块大小（B）与偏移量（O）**  
   - 最佳配置: \( B=8, O=16 \)，平衡压缩率与生成质量。  

2. **训练数据面数的影响**  
   - 面数越多（8k > 4k），生成性能显著提升（Hausdorff距离降低）。  

3. **截断训练的影响**  
   - 截断序列导致生成网格不完整，验证BPT长序列处理的必要性。  

---

### **结论与未来工作**  
1. **结论**  
   - BPT通过高效压缩，支持高面数网格生成，提升细节与拓扑质量。  
   - 模型在点云/图像条件生成中达到SOTA，可直接用于产品级应用。  

2. **未来方向**  
   - 扩展模型参数量（当前500M）。  
   - 探索更适合网格生成的序列建模架构。  

**图示**:  
- BPT应用场景示例（游戏建模、影视特效等）。  

---

### **附录（可选）**  
- **数据过滤策略**: 基于Transformer上下文窗口（9600 token）筛选数据。  
- **模型架构图**: 自回归Transformer + 扩散模型（图像到点云特征对齐）。  

---

**注**: 每页PPT需配图（如流程图、对比图、数据表）和简洁的文字说明，确保内容清晰易懂。